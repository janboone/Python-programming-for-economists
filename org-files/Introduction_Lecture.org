#+SETUPFILE: ../org-html-themes/org/theme-bigblow.setup

#+TITLE: Python for economists
#+AUTHOR: Jan Boone
#+DATE: Dept. of Economics, Tilburg University
#+OPTIONS: toc:1 num:nil timestamp:nil

* Introduction
  :PROPERTIES:
  :CUSTOM_ID: introduction
  :END:

** this lecture
   :PROPERTIES:
   :CUSTOM_ID: this-lecture
   :END:

- in this lecture, we look at:

  - motivation to learn python
  - overview of the course
  - typing texts in markdown and $\LaTeX$
  - markdown files on github
  - initial assignment
  - first look at jupyter server

** motivation
   :PROPERTIES:
   :CUSTOM_ID: motivation
   :END:

-  in this course we teach you

   -  to combine rigorous economics
   -  and how to present it in an understandable way
   -  while your results can be easily reproduced

-  we do this by teaching you

   -  a programming language: Python
   -  how to create notebooks where you can explain your code and
   -  publish them on-line, e.g. on github

** things to learn
   :PROPERTIES:
   :CUSTOM_ID: examples
   :END:

- when you finish this course, you can
  - create and solve economic models in Python
  - do simulations in Python
  - create a file or notebook like [[https://github.com/janboone/Python-programming-for-economists/blob/master/economics_notebook.ipynb][this]]
  - go on to the Datascience course next semester

** finishing the course
   :PROPERTIES:
   :CUSTOM_ID: finishing-the-course
   :END:

- helps you to present economics in a way that is
  - understandable and
  - reproducible

- gives a good starting point to write your thesis
- check [[file:index.org][the website]] and Canvas for relevant information

* Overview of the course

- Python (most of the time)
  - programming economic models, e.g. market outcome, asymmetric information, oligopoly
  - simulating outcomes and interpreting these results
- Career Services offers training:
  - these classes are compulsory!
  - see Canvas for details
- Gender economics taught by Mery Ferrando:
  - helps you to understand gender economics and
  - what we have in mind for the final assignment


* Office and Excel
  :PROPERTIES:
  :CUSTOM_ID: office-excel-and-word
  :END:

**  Excel is great for programming?

+ indeed, simple things can be done in excel
+ e.g. keep track of your grades and calculate the average
+ but possibilities are limited: it is not a programming language
+ however, the main problem is reproducibility
+ if you've done a serious project in excel, look at it again in 3 months time...


* Open source word processing
  :PROPERTIES:
  :CUSTOM_ID: open-source-word-processing
  :END:


** markdown
   :PROPERTIES:
   :CUSTOM_ID: markdown
   :END:

- open source is great!
- markdown allows you to create structure in a simple way
- This is illustrated in a screencast: [[file:pagescreencasts.org::#Short_introduction_to_JupyterLab][Short introduction to JupyterLab]]
- examples are:

#+BEGIN_EXAMPLE

        # this is a heading

        ## subheading

        * first bullet
        * second bullet

        [link text](actual link, e.g. http://www.etc)

        ![Alt text for image](/path/to/img.jpg "Optional title")
#+END_EXAMPLE

-  look on the web for other syntax like footnotes etc.
-  equations you can type in $\LaTeX$

** $\LaTeX$
   :PROPERTIES:
   :CUSTOM_ID: latex
   :END:

-  $\LaTeX$ is great word processing software
-  many students write their thesis in $\LaTeX$
-  here we focus on writing math in $\LaTeX$
-  you can guess what the following will do:

#+BEGIN_EXAMPLE
    $x^2$, $\beta$, $\sqrt{9}$, $\frac{1}{2}$, $\bar x$

    \begin{equation}

    a^2 + b^2 = c^2

    \end{equation}
#+END_EXAMPLE

- if you need something, just google; e.g. google "latex phi" or
  google "latex empty set" etc.
- students write their thesis in $\LaTeX$ using [[https://www.overleaf.com/][Overleaf]]

* What do you need?
  :PROPERTIES:
  :CUSTOM_ID: what-do-you-need
  :END:

** Install software
   :PROPERTIES:
   :CUSTOM_ID: install-software
   :END:

- you do not need to install anything for the course
- you will be working on the [[https://jupyterlab.uvt.nl/][jupyter lab server]]
- if you also want to install things on your computer, use the [[https://www.anaconda.com/download/][anaconda distribution]]

* Working in the cloud
  :PROPERTIES:
  :CUSTOM_ID: working-in-the-cloud
  :END:

** github
   :PROPERTIES:
   :CUSTOM_ID: github
   :END:

- github allows you to
  - publish web pages
  - work "in the cloud" with version control
  - collaborate in the cloud
  - have different versions ("branches") of the same project

- version control takes a bit of time to learn
- but once you get it, the benefits are huge!
- for this course learning git is optional
- you can just drag and drop your notebooks on github as we will practice in class
- you need github to submit your assignments (using github classroom)

* Rules of the game
  :PROPERTIES:
  :CUSTOM_ID: rules-of-the-game
  :END:

** to learn python we use [[https://www.datacamp.com/home][datacamp]], [[https://janboone.github.io/Python-programming-for-economists/pagescreencasts.html][screencasts]] and lectures:

  - you need to finish the datacamp courses and screencasts in time
  - otherwise you will be lost during the lectures
  - see the [[file:index.org::#lecture_schedule][Lecture schedule]] for the planning
  - if you want to learn everything on your own, you do not need to attend my lectures
  - but if you do attend the lectures, you participate actively
  - you do not learn Python by passively typing in answers!
  - you have to attend Joyce's career services classes
  - Mery's lectures on gender economics, coupled with the Python notebook, give you an idea of what we expect in the final assignment


** lecture format

+ in the lectures we will answer questions that you ask us
+ in order to prepare these answers, it is useful if you create a github issue
  + create an "issue" where you explain what your question is: what did you try and why did it not work?
    + hence not something like "I do not know the answer to: *Question* Calculate the total welfare that this planner can achieve. Denote this value ~max_welfare~."
    + but "I tried to calculate total welfare in the following way ... but then I get the following error ..."
+ for us to be able to prepare these answers, submit the issue on the Friday before the week in which we discuss the topic

** suggested workflow

+ follow the Datacamp courses and make notes of what you learn at Datacamp in a notebook on the jupyterlab server
  + in this way it is easy to refer back to useful code snippets that you see on Datacamp
+ go through the notebook and try to answer the questions and assignments
+ if you get stuck with a problem, watch the corresponding screencast for this part
+ if you still cannot figure it out, create an issue on github to ask us
+ we will answer your questions in class
+ or you can use [[https://programmingforeconomists.tilburgai.nl/][our chatbot]]:
  + this is still experimental
  + give us your feedback to help improve the chatbot

** to get a grade for this course:

  - finish the initial assignment (see below) before the deadline
  - attend the career services workshops
  - [[file:index.org::#final_assignment][Final Assignment]]
  - [[file:index.org::#Deadlines][Deadlines]] for the final assignment

* Assignments
  :PROPERTIES:
  :CUSTOM_ID: assignment
  :END:

** Initial Assignment  
- follow and finish the steps under [[file:index.org::#initial_assignment][Initial Assignment]]
- type your first Python and markdow at the [[https://jupyterlab.uvt.nl/][jupyter lab server]] and follow along with the screencast: [[file:pagescreencasts.org::#Short_introduction_to_JupyterLab][Short introduction to JupyterLab]]


** Final assignment
- you can do the assignment on your own or together with 1 other student
- before the final assignment we will post a link to github classroom
- this is the moment where you create your team
- before the deadline you submit your assignment via github classroom
- when submitting your assignment, you fill in the google form (link will be on Canvas)
- see [[file:index.org::*Assignments][Assignments]] for details
